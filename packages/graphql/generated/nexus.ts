/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as Context from "../context"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  MatchReportWhereUniqueInput: { // input type
    id?: number | null; // Int
    loss_id?: number | null; // Int
    match_id?: number | null; // Int
    winner_id?: number | null; // Int
  }
  MatchWhereUniqueInput: { // input type
    away_id?: number | null; // Int
    home_id?: number | null; // Int
    id?: number | null; // Int
  }
  MemberWhereUniqueInput: { // input type
    id?: number | null; // Int
    member_id?: number | null; // Int
    team_id?: number | null; // Int
  }
  PlayerReportWhereUniqueInput: { // input type
    id?: number | null; // Int
    matchId?: number | null; // Int
    player_id?: number | null; // Int
  }
  TeamWhereUniqueInput: { // input type
    creator_id?: number | null; // Int
    id?: number | null; // Int
  }
  UserWhereUniqueInput: { // input type
    email?: string | null; // String
    id?: number | null; // Int
  }
}

export interface NexusGenEnums {
  MemberRole: "MANAGER" | "MEMBER" | "PENDING"
  match_status: "DEAL" | "DONE" | "PENDING"
  member_role: "MANAGER" | "MEMBER" | "PENDING"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenRootTypes {
  AuthUser: Context.AuthUser;
  Match: { // root type
    away: NexusGenRootTypes['Team']; // Team!
    created_at?: NexusGenScalars['DateTime'] | null; // DateTime
    field?: string | null; // String
    home: NexusGenRootTypes['Team']; // Team!
    id: number; // Int!
    location?: string | null; // String
    status?: NexusGenEnums['match_status'] | null; // match_status
    time?: NexusGenScalars['DateTime'] | null; // DateTime
    updated_at?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  MatchReport: { // root type
    id: number; // Int!
    loss: NexusGenRootTypes['Team']; // Team!
    result?: string | null; // String
    winner: NexusGenRootTypes['Team']; // Team!
  }
  Member: { // root type
    cash?: number | null; // Int
    id: number; // Int!
    role?: NexusGenEnums['member_role'] | null; // member_role
  }
  Mutation: {};
  PlayerReport: { // root type
    assist?: number | null; // Int
    id: number; // Int!
    score?: number | null; // Int
  }
  Query: {};
  Team: { // root type
    description?: string | null; // String
    home?: string | null; // String
    id: number; // Int!
    logo?: string | null; // String
    loss?: number | null; // Int
    name: string; // String!
    win?: number | null; // Int
  }
  User: { // root type
    address?: string | null; // String
    email: string; // String!
    id: number; // Int!
    name?: string | null; // String
    phone?: string | null; // String
  }
  UserAccount: { // root type
    address?: string | null; // String
    email: string; // String!
    id: number; // Int!
    name?: string | null; // String
    password: string; // String!
    phone?: string | null; // String
    teams?: NexusGenRootTypes['Team'][] | null; // [Team!]
  }
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  MatchReportWhereUniqueInput: NexusGenInputs['MatchReportWhereUniqueInput'];
  MatchWhereUniqueInput: NexusGenInputs['MatchWhereUniqueInput'];
  MemberWhereUniqueInput: NexusGenInputs['MemberWhereUniqueInput'];
  PlayerReportWhereUniqueInput: NexusGenInputs['PlayerReportWhereUniqueInput'];
  TeamWhereUniqueInput: NexusGenInputs['TeamWhereUniqueInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  MemberRole: NexusGenEnums['MemberRole'];
  match_status: NexusGenEnums['match_status'];
  member_role: NexusGenEnums['member_role'];
  String: NexusGenScalars['String'];
  Int: NexusGenScalars['Int'];
  Float: NexusGenScalars['Float'];
  Boolean: NexusGenScalars['Boolean'];
  ID: NexusGenScalars['ID'];
  DateTime: NexusGenScalars['DateTime'];
}

export interface NexusGenFieldTypes {
  AuthUser: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['UserAccount']; // UserAccount!
  }
  Match: { // field return type
    away: NexusGenRootTypes['Team']; // Team!
    created_at: NexusGenScalars['DateTime'] | null; // DateTime
    field: string | null; // String
    home: NexusGenRootTypes['Team']; // Team!
    id: number; // Int!
    location: string | null; // String
    status: NexusGenEnums['match_status'] | null; // match_status
    time: NexusGenScalars['DateTime'] | null; // DateTime
    updated_at: NexusGenScalars['DateTime'] | null; // DateTime
  }
  MatchReport: { // field return type
    id: number; // Int!
    loss: NexusGenRootTypes['Team']; // Team!
    match: NexusGenRootTypes['Match']; // Match!
    result: string | null; // String
    winner: NexusGenRootTypes['Team']; // Team!
  }
  Member: { // field return type
    cash: number | null; // Int
    id: number; // Int!
    role: NexusGenEnums['member_role'] | null; // member_role
    team: NexusGenRootTypes['Team']; // Team!
    user: NexusGenRootTypes['User']; // User!
  }
  Mutation: { // field return type
    createNewMatch: NexusGenRootTypes['Match']; // Match!
    createNewMatchReport: NexusGenRootTypes['MatchReport']; // MatchReport!
    createNewMember: NexusGenRootTypes['Member']; // Member!
    createNewPlayerReport: NexusGenRootTypes['PlayerReport']; // PlayerReport!
    createNewTeam: NexusGenRootTypes['Team'] | null; // Team
    login: NexusGenRootTypes['AuthUser'] | null; // AuthUser
    signup: NexusGenRootTypes['AuthUser'] | null; // AuthUser
  }
  PlayerReport: { // field return type
    assist: number | null; // Int
    id: number; // Int!
    match: NexusGenRootTypes['Match']; // Match!
    score: number | null; // Int
    user: NexusGenRootTypes['User']; // User!
  }
  Query: { // field return type
    filterTeam: NexusGenRootTypes['Team'][]; // [Team!]!
    match: NexusGenRootTypes['Match'] | null; // Match
    matches: NexusGenRootTypes['Match'][]; // [Match!]!
    matchReport: NexusGenRootTypes['MatchReport'] | null; // MatchReport
    matchReports: NexusGenRootTypes['MatchReport'][]; // [MatchReport!]!
    member: NexusGenRootTypes['Member'] | null; // Member
    members: NexusGenRootTypes['Member'][]; // [Member!]!
    playerReport: NexusGenRootTypes['PlayerReport'] | null; // PlayerReport
    team: NexusGenRootTypes['Team'] | null; // Team
    teams: NexusGenRootTypes['Team'][]; // [Team!]!
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  Team: { // field return type
    creator: NexusGenRootTypes['User'] | null; // User
    description: string | null; // String
    home: string | null; // String
    id: number; // Int!
    logo: string | null; // String
    loss: number | null; // Int
    members: NexusGenRootTypes['Member'][]; // [Member!]!
    name: string; // String!
    win: number | null; // Int
  }
  User: { // field return type
    address: string | null; // String
    email: string; // String!
    id: number; // Int!
    name: string | null; // String
    phone: string | null; // String
    teams: NexusGenRootTypes['Team'][]; // [Team!]!
  }
  UserAccount: { // field return type
    address: string | null; // String
    email: string; // String!
    id: number; // Int!
    name: string | null; // String
    password: string; // String!
    phone: string | null; // String
    teams: NexusGenRootTypes['Team'][] | null; // [Team!]
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createNewMatch: { // args
      away_id?: number | null; // Int
      field: string; // String!
      home_id: number; // Int!
      location: string; // String!
    }
    createNewMatchReport: { // args
      loss_id: number; // Int!
      match_id: number; // Int!
      result: string; // String!
      winner_id: number; // Int!
    }
    createNewMember: { // args
      cash: number; // Int!
      role?: NexusGenEnums['MemberRole'] | null; // MemberRole
      team_id: number; // Int!
      user_id: number; // Int!
    }
    createNewPlayerReport: { // args
      assist: number; // Int!
      match_id: number; // Int!
      score: number; // Int!
      user_id: number; // Int!
    }
    createNewTeam: { // args
      description?: string | null; // String
      home?: string | null; // String
      logo?: string | null; // String
      name: string; // String!
    }
    login: { // args
      email: string; // String!
      password: string; // String!
    }
    signup: { // args
      address?: string | null; // String
      email: string; // String!
      name?: string | null; // String
      password: string; // String!
      phone?: string | null; // String
    }
  }
  Query: {
    filterTeam: { // args
      name?: string | null; // String
    }
    match: { // args
      where: NexusGenInputs['MatchWhereUniqueInput']; // MatchWhereUniqueInput!
    }
    matches: { // args
      after?: NexusGenInputs['MatchWhereUniqueInput'] | null; // MatchWhereUniqueInput
      before?: NexusGenInputs['MatchWhereUniqueInput'] | null; // MatchWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    matchReport: { // args
      where: NexusGenInputs['MatchReportWhereUniqueInput']; // MatchReportWhereUniqueInput!
    }
    matchReports: { // args
      after?: NexusGenInputs['MatchReportWhereUniqueInput'] | null; // MatchReportWhereUniqueInput
      before?: NexusGenInputs['MatchReportWhereUniqueInput'] | null; // MatchReportWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    member: { // args
      where: NexusGenInputs['MemberWhereUniqueInput']; // MemberWhereUniqueInput!
    }
    members: { // args
      after?: NexusGenInputs['MemberWhereUniqueInput'] | null; // MemberWhereUniqueInput
      before?: NexusGenInputs['MemberWhereUniqueInput'] | null; // MemberWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    playerReport: { // args
      where: NexusGenInputs['PlayerReportWhereUniqueInput']; // PlayerReportWhereUniqueInput!
    }
    team: { // args
      where: NexusGenInputs['TeamWhereUniqueInput']; // TeamWhereUniqueInput!
    }
    teams: { // args
      after?: NexusGenInputs['TeamWhereUniqueInput'] | null; // TeamWhereUniqueInput
      before?: NexusGenInputs['TeamWhereUniqueInput'] | null; // TeamWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    user: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    users: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Team: {
    members: { // args
      after?: NexusGenInputs['MemberWhereUniqueInput'] | null; // MemberWhereUniqueInput
      before?: NexusGenInputs['MemberWhereUniqueInput'] | null; // MemberWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  User: {
    teams: { // args
      after?: NexusGenInputs['TeamWhereUniqueInput'] | null; // TeamWhereUniqueInput
      before?: NexusGenInputs['TeamWhereUniqueInput'] | null; // TeamWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthUser" | "Match" | "MatchReport" | "Member" | "Mutation" | "PlayerReport" | "Query" | "Team" | "User" | "UserAccount";

export type NexusGenInputNames = "MatchReportWhereUniqueInput" | "MatchWhereUniqueInput" | "MemberWhereUniqueInput" | "PlayerReportWhereUniqueInput" | "TeamWhereUniqueInput" | "UserWhereUniqueInput";

export type NexusGenEnumNames = "MemberRole" | "match_status" | "member_role";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}